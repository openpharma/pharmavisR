install.packages(c("here", "patchwork"))
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
a <- 100
a %>% b
library(usethis)
proj_activate(path)
proj_activate(.)
proj_activate("")
proj_activate()
use_mit_license("My Name")
use_package("broom", "Suggests")
use_news_md()
use_test("my-test")
x <- 1
y <- 2
use_data(x, y)
usethis::use_pkgdown()
pkgdown::build_site()
devtools::document()
usethis::use_package("DOT")
install.packages("DOT")
install.packages("MESS")
usethis::use_package("DOT")
usethis::use_package("MESS")
devtools::document()
devtools::document()
pkgdown::build_site()
library(usethis)
use_r("visr_plot_survival")
use_test("visr_plot_survival")
#' Plot step lines based on a survival or time to event analysis
#'
#' The function assumes a tidied tibble dataset with the following variables:
#' time
#' estimate
#' strata
#'
#' @param x tidy tibble dataset. Based on broom tidied dataset.
#'
#' @return ggplot object
#' @export
#'
#' @examples
#' library(survival)
#' library(magrittr)
#' library(dplyr)
#' library(ggplot2)
#' library(broom)
#' survival::survfit(Surv(time, status) ~ sex, data = lung)%>%
#'   tidy() %>%
#'   visr_plot_surv()
visr_plot_surv <- function(x) {
df <- x
gg <-
df %>%
ggplot2::ggplot(aes(time, estimate, group = strata)) +
ggplot2::geom_line() +
ggplot2::geom_linerange(aes(ymin = conf.low, ymax = conf.high), alpha = 0.2) +
ggplot2::geom_point(
data = df %>% dplyr::filter(n.censor > 0),
aes(time, estimate),
alpha = 0.5
) +
ggtitle("Update the title", subtitle = "Fill out the population")
return(gg)
}
#' Function to summarise risk by interval
#' See code from here https://mcfromnz.wordpress.com/2012/05/05/kaplan-meier-survival-plot-with-at-risk-table-by-sub-groups/
#'
#' @param x surv object to summarise
#' @param timeby intervals to disaply the risk table
#'
#' @return tidy tibble
#' @export
#'
#' @examples
#' library(survival)
#' library(magrittr)
#' library(dplyr)
#' library(ggplot2)
#' library(broom)
#' fit <- survival::survfit(Surv(time, status) ~ sex, data = lung)
#' visr_summary_surv(fit, 50)
visr_summary_surv <- function(x, timeby){
times <- seq(0, max(x$time), by = timeby)
df <-
tibble::tibble(strata = summary(x, times = times, extend = TRUE)$strata,
time = summary(x, times = times, extend = TRUE)$time,
n.risk = summary(x, times = times, extend = TRUE)$n.risk)
return(df)
}
#' Create a ggplot of a risk table
#'
#' @param x survfit object
#' @param timeby Integer to indicate range to summarise risk table
#'
#' @return ggplot object
#' @export
#'
#' @examples
#' library(survival)
#' library(magrittr)
#' library(dplyr)
#' library(ggplot2)
#' library(broom)
#' fit <- survival::survfit(Surv(time, status) ~ sex, data = lung)
#' visr_plot_risk(fit, 50) %>%
#' ggplot(aes(x = time, y = strata_id, label = n.risk, group= strata)) +
#' geom_text()
visr_plot_risk <- function(x, timeby = 10){
df <- visr_summary_surv(x, timeby) %>%
dplyr::mutate(strata_id = group_indices(., strata) - 1)
return(df)
}
library(survival)
library(magrittr)
#' library(dplyr)
#' library(ggplot2)
#' library(broom)
#' fit <- survival::survfit(Surv(time, status) ~ sex, data = lung)
#' visr_plot_risk(fit, 50) %>%
#' ggplot(aes(x = time, y = strata_id, label = n.risk, group= strata)) +
#' geom_text()
library(survival)
library(magrittr)
library(dplyr)
library(ggplot2)
library(broom)
fit <- survival::survfit(Surv(time, status) ~ sex, data = lung)
visr_plot_risk(fit, 50) %>%
ggplot(aes(x = time, y = strata_id, label = n.risk, group= strata)) +
geom_text()
devtools::document()
usethis::use_package("ggplot2")
usethis::use_package("magrittr")
usethis::use_package("survial")
usethis::use_package("survival")
usethis::use_vignette("plot_survival")
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
usethis::use_badge("experimental")
usethis::use_lifecycle_badge("Experimental")
pkgdown::build_site()
